name: Build and Analyze Segments

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-and-analyze:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up CMake
      uses: jwlawson/actions-setup-cmake@v1.13

    - name: Configure CMake
      run: |
        cmake -S . -B build -DCMAKE_BUILD_TYPE=Debug
      shell: bash

    - name: Build project
      run: |
        cmake --build build --config Debug
      shell: bash

    - name: Run program
      run: |
        ./build/segments || ./build/segments.exe
      shell: bash

    - name: Analyze Segments - Linux/macOS
      if: runner.os != 'Windows'
      run: |
        echo "Segment sizes:"
        size build/segments
        echo "Symbol table (filtered):"
        objdump -t build/segments | grep -E 'global_var|msg|main|func|\.L\.str' || true
        echo "local_var: Stack"
        echo "heap_var: Stack (pointer), Heap (memory)"
      shell: bash

    - name: Analyze Segments - Windows (MinGW)
      if: runner.os == 'Windows'
      run: |
        echo "Segment sizes:"
        size build/segments.exe
        echo "Symbol table (filtered):"
        objdump -t build/segments.exe | findstr "global_var msg func main"
        echo "local_var: Stack"
        echo "heap_var: Stack (pointer), Heap (memory)"
      shell: cmd
